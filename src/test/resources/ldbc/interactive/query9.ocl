context System::FriendRecommendation(
personId: String,
date: Date
) : Set(Tuple(personId: String, personFirstName:String, personLastName:String, similarity: Integer, personGender: String, personLocationName: String))

body:
let person:Person = Person.allInstances()->select(p| p.code = personId) in
let friends:Set(Person) = person.friend->union(person.friend -> collect(friend))->asSet() ->excluding(person) in
friends->collect(message)->asSet()->select(m| m.creationDate < date)->sortedBy(creationDate, -id) ->subOrderedSet(1,20)
->collect(
Tuple{
  personId = author.id,
  personFirstName = author.firstName,
  personLastName = author.lastName,
  messageId = id,
  messageContent = content,
  creationDate = creationDate
})