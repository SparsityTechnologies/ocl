context System::NewTopics(
personId: String,
startDate: Date,
duration: Integer)
:SortedSet(Tuple (
tagName: String,
count: Integer)
)

body:
let person:Person = Person.allInstances()->select(p| p.code = personId) in
let friendsPosts: Set(Post) = person.friend->collect(f.messages->select(m|  m.oclIsTypeOf(Post))) in
let posts: Set(Post) = friendsPosts ->select(creationDate.between(startDate, duration)) in

posts->collect(tag)->select(message->forAll(m| friendsPosts ->includes(m) implies m.creationDate.before(startDate,
duration)))->collect( Tuple{
tagName = name,
count = posts->intersection(posts)->size()
})
->sortedBy(count, -tagName)
->subOrderedSet(1,20)
